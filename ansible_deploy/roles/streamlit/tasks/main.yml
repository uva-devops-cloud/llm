---
- name: Install required packages
  ansible.builtin.apt: # Using apt for Ubuntu
    name:
      - python3
      - python3-pip
      - python3-dev
      - python3-venv
      - git
    state: present
    update_cache: yes
  become: true

- name: Check if app directory exists
  stat:
    path: "/opt/streamlit-app"
  register: app_dir

- name: Remove existing app directory if it exists
  file:
    path: "/opt/streamlit-app"
    state: absent
  when: app_dir.stat.exists
  become: true

- name: Create fresh app directory
  file:
    path: "/opt/streamlit-app"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0755"
  become: true

- name: Clone application from git
  git:
    repo: "https://github.com/uva-devops-cloud/llm.git"
    dest: "/opt/streamlit-app/"
    version: feature/deploy-ansible
  become: true
  become_user: "{{ app_user }}"

- name: Set ownership and permissions after cloning
  file:
    path: "/opt/streamlit-app"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0755"
    recurse: yes

- name: Create Python virtual environment
  shell: python3 -m venv /opt/streamlit-app/venv
  args:
    creates: /opt/streamlit-app/venv/bin/activate

- name: Create .env file
  template:
    src: env.j2
    dest: /opt/streamlit-app/.env
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0600"

- name: Upgrade pip in virtual environment
  pip:
    name: pip
    state: latest
    virtualenv: /opt/streamlit-app/venv

- name: Create requirements list
  set_fact:
    req_packages:
      - streamlit
      - python-dotenv
      - pg8000
      - langchain
      - langchain-anthropic
      - langgraph

- name: Install Python packages individually with retry
  pip:
    name: "{{ item }}"
    virtualenv: /opt/streamlit-app/venv
    state: present
  become_user: "{{ app_user }}"
  register: pip_result
  retries: 3
  delay: 5
  until: pip_result is success
  loop: "{{ req_packages }}"

- name: Create streamlit_config.toml directory
  file:
    path: "/home/{{ app_user }}/.streamlit"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0755"

- name: Create streamlit config file
  copy:
    content: |
      [server]
      headless = true
      enableCORS = false
      enableXsrfProtection = false
    dest: "/home/{{ app_user }}/.streamlit/config.toml"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0644"

- name: Create systemd service file
  template:
    src: streamlit.service.j2
    dest: /etc/systemd/system/streamlit.service
    mode: "0644"
  notify: restart streamlit

- name: Enable and start streamlit service
  systemd:
    name: streamlit
    enabled: yes
    state: started
    daemon_reload: yes

- name: Set up application log rotation
  copy:
    content: |
      /var/log/streamlit-app.log {
        weekly
        rotate 4
        compress
        missingok
        notifempty
      }
    dest: /etc/logrotate.d/streamlit
    mode: "0644"
